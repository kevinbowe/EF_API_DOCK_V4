###   This docker-compose file will generate 2x container:
###     api-container and persondb-container.
###   Run this docker-compose.yaml like this
#
###     $ docker compose -f docker-compose.yaml up

name: db_api_project_container
services:
  api:
    container_name: api_container
    build:
      dockerfile: Dockerfile-Api
    image: api-image
    ports:
      - 8080:8000
    depends_on:
      - db
    environment:
      - ACCEPT_EULY=Y
      - MSSQL_SA_PASSWORD=L0ckandK#y
  db:
    container_name: persondb_container
    hostname: sql_hostname
    build:
      dockerfile: Dockerfile-Db
    image: personsdb-image
    ports:
      - 1433:1433
    environment:
      - ACCEPT_EULY=y
      - MSSQL_SA_PASSWORD=L0ckandK#y


####  Reference  ###############################################################
###           API_PROJECT
###   Run this docker-compose.yaml like this
###     $ docker compose -f docker-compose-Api.yaml up

# name: API-Project
# services:
#   api-container:
#     build:
#       dockerfile: Dockerfile-Api
#     image: api-image
#     ports:
#       - 8080:8000

####  Reference  ###############################################################

###           Db_PROJECT
###   Run this docker-compose.yaml like this
###     $ docker compose -f docker-compose-Db.yaml up

# name: PersonsDb-Project
# services:
#   personsdb-container:
#     build:
#       dockerfile: Dockerfile-Db
#     image: personsdb-image
#     ports:
#       - 1433:1433
